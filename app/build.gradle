apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'


android {

    buildToolsVersion = '29.0.2'
    compileSdkVersion rootProject.ext.compileSdkVersion
    defaultConfig {
        applicationId "com.example.hamid.wallet"
        minSdkVersion rootProject.minSdkVersion
        targetSdkVersion rootProject.targetSdkVersion
        versionCode rootProject.versionCode
        versionName rootProject.versionName
        testInstrumentationRunner rootProject.testInstrumentationRunner
        multiDexEnabled true

    }
    buildTypes {
        debug {
            testCoverageEnabled = true
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/ASL2.0'
    }

    testOptions {
        unitTests.returnDefaultValues = true
        unitTests.includeAndroidResources = true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

}

android.sourceSets {
    test {
        java.srcDirs += "$projectDir/src/utils/helper"
    }
    androidTest {
        java.srcDirs += "$projectDir/src/utils/helper"
    }
}

android {
    packagingOptions {
        exclude 'LICENSE.txt'
    }
}

dependencies {
    implementation project(path: ':domain')
    api project(path: ':data')

    implementation libsCommon.kotlin

    /* Android Support Library: RecyclerView, CardView  */
    implementation libsPresentation.appCompat
    implementation libsPresentation.material
    implementation libsPresentation.cardview
    implementation libsPresentation.recyclerview
    implementation libsPresentation.constraintLayout
    implementation libsPresentation.multidex
    implementation libsPresentation.annotation
    implementation group: 'commons-io', name: 'commons-io', version: "$commonsVersion"

    /* Architecture Lifecycle components */
    implementation libsPresentation.lifecycleExtensions
    testImplementation libsCommon.coreTesting
    androidTestImplementation libsCommon.coreTesting
    kapt libsPresentation.lifecycleCompiler
    implementation libsPresentation.livedata

    // RxJava and RxAndroid
    implementation libsCommon.rxJava
    implementation libsCommon.rxAndroid

    /* ROOM */
    implementation libsCommon.room
    kapt libsCommon.roomCompiler
    implementation libsCommon.roomRxJava
    androidTestImplementation libsCommon.roomTesting
    implementation libsCommon.roomCommon

    /* Dagger2 */
    annotationProcessor libsCommon.daggerCompiler
    implementation libsCommon.daggerAndroid
    implementation libsCommon.daggerAndroidSupport
    annotationProcessor libsCommon.daggerAndroidProcessor
    implementation libsCommon.dagger
    kapt libsCommon.daggerKotlinAndroidProcessor
    kapt libsCommon.daggerKotlinCompiler

    implementation libsCommon.okhttpLogging

    testImplementation libsCommon.mockitoInline
    implementation libsCommon.espressoIdlingResource
    androidTestImplementation libsCommon.extJunit
    androidTestImplementation libsCommon.core
    androidTestImplementation libsCommon.rules
    androidTestImplementation libsCommon.runner
    testImplementation libsCommon.junit
    testImplementation libsCommon.mockitoKotlin

    /* For recycler view actions */
    androidTestImplementation("androidx.test.espresso:espresso-contrib:$espressoVersion") {
        exclude group: 'com.android.support', module: 'appcompat'
        exclude group: 'com.android.support', module: 'support-v4'
        exclude module: 'recyclerview-v7'
    }


}
repositories {
    mavenCentral()
}

configurations.all
        {
            resolutionStrategy.eachDependency { details ->
                if (details.requested.group == 'androidx.arch.core'
                        && !details.requested.name.contains('core-runtime')) {
                    details.useVersion "2.0.1"
                }

            }
        }

if (project.hasProperty('kapt')) {
    kapt {
        javacOptions {
            option("-source", "8")
            option("-target", "8")
        }
    }
}

